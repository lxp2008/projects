import math

def reward_function(params):
    # 赛道参数
    track_width = params['track_width']
    distance_from_center = params['distance_from_center']
    speed = params['speed']
    steering_angle = abs(params['steering_angle'])
    all_wheels_on_track = params['all_wheels_on_track']
    progress = params['progress']
    steps = params['steps']
    waypoints = params['waypoints']
    closest_waypoints = params['closest_waypoints']
    heading = params['heading']

    # 初始化奖励值
    reward = 1.0

    # 1. 弯道处理：预测弯道方向，优化低速急弯
    next_waypoint = waypoints[closest_waypoints[1]]
    prev_waypoint = waypoints[closest_waypoints[0]]
    track_direction = math.atan2(next_waypoint[1] - prev_waypoint[1],
                                  next_waypoint[0] - prev_waypoint[0])
    track_direction = math.degrees(track_direction)
    direction_diff = abs(track_direction - heading)

    if direction_diff > 10:  # 需要转弯的情况下
        if speed < 2.0 and steering_angle < 15:  # 限制低速平稳转弯
            reward += 2.0
        else:
            reward *= 0.5  # 惩罚急转弯或高速转弯

    # 2. 直道加速：高速度并保持赛道中心
    optimal_speed = 3.5  # 理想速度
    if direction_diff <= 10:  # 直道条件
        if speed >= optimal_speed and distance_from_center <= 0.2 * track_width:
            reward += 2.5  # 鼓励高速并靠近中心
        else:
            reward *= 0.8  # 惩罚过慢或偏离中心

    # 3. 距离赛道中心奖励
    marker_1 = 0.1 * track_width
    marker_2 = 0.25 * track_width
    if distance_from_center <= marker_1:
        reward += 1.5  # 非常接近中心
    elif distance_from_center <= marker_2:
        reward += 0.8  # 偏离中心但仍在合理范围内
    else:
        reward *= 0.5  # 偏离较多惩罚

    # 4. 转向与方向修正：减少转向过度的惩罚
    if steering_angle > 20:  # 急转弯
        reward *= 0.8  # 减少奖励
    elif steering_angle < 10:  # 平稳驾驶
        reward += 1.0

    # 5. 进度效率：较少步数完成更多进度
    if (steps % 100) == 0 and progress > (steps / 15):
        reward += 10.0  # 在较短步数内完成高进度，给予额外奖励

    # 6. 所有轮子保持在赛道上的奖励
    if not all_wheels_on_track:
        reward = 1e-3  # 如果出轨，直接惩罚

    return float(reward)
